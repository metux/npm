{
  "_args": [
    [
      {
        "raw": "npm-registry-mock@https://registry.npmjs.org/npm-registry-mock/-/npm-registry-mock-1.1.0.tgz",
        "scope": null,
        "escapedName": "npm-registry-mock",
        "name": "npm-registry-mock",
        "rawSpec": "https://registry.npmjs.org/npm-registry-mock/-/npm-registry-mock-1.1.0.tgz",
        "spec": "https://registry.npmjs.org/npm-registry-mock/-/npm-registry-mock-1.1.0.tgz",
        "type": "remote"
      },
      "."
    ]
  ],
  "_from": "npm-registry-mock@>=1.1.0 <1.2.0",
  "_id": "npm-registry-mock@1.1.0",
  "_inCache": true,
  "_location": "/npm-registry-mock",
  "_phantomChildren": {},
  "_requested": {
    "raw": "npm-registry-mock@https://registry.npmjs.org/npm-registry-mock/-/npm-registry-mock-1.1.0.tgz",
    "scope": null,
    "escapedName": "npm-registry-mock",
    "name": "npm-registry-mock",
    "rawSpec": "https://registry.npmjs.org/npm-registry-mock/-/npm-registry-mock-1.1.0.tgz",
    "spec": "https://registry.npmjs.org/npm-registry-mock/-/npm-registry-mock-1.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/npm-registry-mock/-/npm-registry-mock-1.1.0.tgz",
  "_shasum": "6e42a2422c4b2bd02a68285f56be702220c644cc",
  "_shrinkwrap": null,
  "_spec": "npm-registry-mock@https://registry.npmjs.org/npm-registry-mock/-/npm-registry-mock-1.1.0.tgz",
  "_where": ".",
  "author": {
    "name": "Robert Kowalski",
    "email": "rok@kowalski.gd"
  },
  "bugs": {
    "url": "https://github.com/npm/npm-registry-mock/issues"
  },
  "dependencies": {
    "hock": "~0.2.5",
    "util-extend": "~1.0.1"
  },
  "description": "mock the npm registry",
  "devDependencies": {
    "mkdirp": "^0.5.1",
    "mocha": "^3.0.2",
    "npm": ">=4",
    "npm-registry-client": "^7.2.1",
    "request": "^2.73.0",
    "rimraf": "^2.5.3"
  },
  "homepage": "https://github.com/npm/npm-registry-mock#readme",
  "keywords": [
    "npm",
    "registry",
    "testing"
  ],
  "license": "BSD-2-Clause",
  "main": "index.js",
  "name": "npm-registry-mock",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/npm/npm-registry-mock.png?branch=master)](https://travis-ci.org/npm/npm-registry-mock)\n[![Dependency Status](https://gemnasium.com/npm/npm-registry-mock.png)](https://gemnasium.com/npm/npm-registry-mock)\n\n#npm-registry-mock\n\n##Mocked Packages\n\nCurrently mocked packages are:\n\n`underscore` at 1.3.1, 1.3.3 and 1.5.1 while version 1.5.1 is the latest in this mocked registry.\n\n`request` at 0.9.0, 0.9.5 and 2.27.0 while version 2.27.0 is the latest in this mocked registry.\n\n`test-package-with-one-dep` at 0.0.0, with mocked dependency `test-package@0.0.0`.\n\n`npm-test-peer-deps` at 0.0.0, with a peer dependency on `request@0.9.x` and a dependency on `underscore@1.3.1`.\n\n`test-repo-url-http` at 0.0.0\n\n`test-repo-url-https` at 0.0.1\n\n`test-repo-url-ssh` at 0.0.1\n\n`mkdirp` at 0.3.5\n\n`optimist` at 0.6.0\n\n`clean` at 2.1.6\n\n`async` at 0.2.9, 0.2.10\n\n`checker` at 0.5.1, 0.5.2\n\n##Usage\n\nInstalling underscore 1.3.1:\n\n```javascript\nvar mr = require(\"npm-registry-mock\")\n\nmr({port: 1331}, function (err, s) {\n  npm.load({registry: \"http://localhost:1331\"}, function () {\n    npm.commands.install(\"/tmp\", \"underscore@1.3.1\", function (err) {\n      // assert npm behaves right...\n      s.close() // shutdown server\n    })\n  })\n})\n```\n\nDefining custom mock routes:\n\n```javascript\nvar mr = require(\"npm-registry-mock\")\n\nvar customMocks = {\n  \"get\": {\n    \"/mypackage\": [500, {\"ente\" : true}]\n  }\n}\n\nmr({port: 1331, mocks: customMocks}, function (err, s) {\n  npm.load({registry: \"http://localhost:1331\"}, function () {\n    npm.commands.install(\"/tmp\", \"mypackage\", function (err) {\n      // assert npm behaves right with an 500 error as response...\n      s.close() // shutdown server\n    })\n  })\n})\n```\n\nLimit the requests for each route:\n\n```javascript\nmr({\n    port: 1331,\n    minReq: 1,\n    maxReq: 5\n  }, function (err, s) {\n\n```\n\n##Adding a new fixture\n\nAlthough ideally we stick with the packages already mocked when writing new tests, in some cases it can be necessary to recreate a certain pathological or unusual scenario in the mock registry. In that case you can run\n\n```sh\n$ ./add-fixture.sh my-weird-package 1.2.3\n```\n\nto add that package to the fixtures directory.\n\n##Breaking Changes for 1.0\n - the callback returns `err, server` now, instead of just server (https://github.com/npm/npm-registry-mock/issues/20)\n - options must be of type `object`\n - a \"plugin\" is injected via options.plugin, not as a mock being a function\n - a plugin does not override the default routes any more\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/npm/npm-registry-mock.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "1.1.0"
}

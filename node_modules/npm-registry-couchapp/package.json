{
  "_args": [
    [
      {
        "raw": "npm-registry-couchapp@https://registry.npmjs.org/npm-registry-couchapp/-/npm-registry-couchapp-2.6.12.tgz",
        "scope": null,
        "escapedName": "npm-registry-couchapp",
        "name": "npm-registry-couchapp",
        "rawSpec": "https://registry.npmjs.org/npm-registry-couchapp/-/npm-registry-couchapp-2.6.12.tgz",
        "spec": "https://registry.npmjs.org/npm-registry-couchapp/-/npm-registry-couchapp-2.6.12.tgz",
        "type": "remote"
      },
      "."
    ]
  ],
  "_from": "npm-registry-couchapp@>=2.6.12 <2.7.0",
  "_id": "npm-registry-couchapp@2.6.12",
  "_inCache": true,
  "_location": "/npm-registry-couchapp",
  "_phantomChildren": {},
  "_requested": {
    "raw": "npm-registry-couchapp@https://registry.npmjs.org/npm-registry-couchapp/-/npm-registry-couchapp-2.6.12.tgz",
    "scope": null,
    "escapedName": "npm-registry-couchapp",
    "name": "npm-registry-couchapp",
    "rawSpec": "https://registry.npmjs.org/npm-registry-couchapp/-/npm-registry-couchapp-2.6.12.tgz",
    "spec": "https://registry.npmjs.org/npm-registry-couchapp/-/npm-registry-couchapp-2.6.12.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/npm-registry-couchapp/-/npm-registry-couchapp-2.6.12.tgz",
  "_shasum": "f9085f184bf41577aedd04528878dfec7de2565a",
  "_shrinkwrap": null,
  "_spec": "npm-registry-couchapp@https://registry.npmjs.org/npm-registry-couchapp/-/npm-registry-couchapp-2.6.12.tgz",
  "_where": ".",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/npm/npm-registry-couchapp/issues"
  },
  "dependencies": {
    "couchapp": "~0.11.0",
    "json": "^9.0.2",
    "semver": "4"
  },
  "description": "The CouchApp implementation of an npm registry",
  "devDependencies": {
    "parse-json-response": "^1.0.1",
    "request": "^2.42.0",
    "rimraf": "~2.2.6",
    "tap": "*",
    "which": "^1.0.5"
  },
  "homepage": "https://github.com/npm/npm-registry-couchapp",
  "keywords": [
    "npm",
    "registry",
    "couchapp",
    "design",
    "doc",
    "ddoc",
    "couchdb",
    "couch"
  ],
  "license": "ISC",
  "name": "npm-registry-couchapp",
  "optionalDependencies": {},
  "readme": "# npm-registry-couchapp\n\n[![Build Status](https://img.shields.io/travis/npm/npm-registry-couchapp/master.svg)](https://travis-ci.org/npm/npm-registry-couchapp)\n\nThe design doc for The npm Registry CouchApp\n\n# Installing\n\nYou need CouchDB version 1.4.0 or higher.  1.5.0 or higher is best.\n\nOnce you have CouchDB installed, create a new database:\n\n    curl -X PUT http://localhost:5984/registry\n\nYou'll need the following entries added in your `local.ini`\n\n```ini\n[couch_httpd_auth]\npublic_fields = appdotnet, avatar, avatarMedium, avatarLarge, date, email, fields, freenode, fullname, github, homepage, name, roles, twitter, type, _id, _rev\nusers_db_public = true\n\n[httpd]\nsecure_rewrites = false\n\n[couchdb]\ndelayed_commits = false\n```\n\nClone the repository if you haven't already, and cd into it:\n\n    git clone git://github.com/npm/npm-registry-couchapp\n    cd npm-registry-couchapp\n\nNow install the stuff:\n\n    npm install\n\nSync the ddoc to `_design/scratch`\n\n    npm start \\\n      --npm-registry-couchapp:couch=http://admin:password@localhost:5984/registry\n\nNext, make sure that views are loaded:\n\n    npm run load \\\n      --npm-registry-couchapp:couch=http://admin:password@localhost:5984/registry\n\nAnd finally, copy the ddoc from `_design/scratch` to `_design/app`\n\n    npm run copy \\\n      --npm-registry-couchapp:couch=http://admin:password@localhost:5984/registry\n\nOf course, you can avoid the command-line flag by setting it in your\n~/.npmrc file:\n\n    _npm-registry-couchapp:couch=http://admin:password@localhost:5984/registry\n\nThe `_` prevents any other packages from seeing the setting (with a\npassword) in their environment when npm runs scripts for those other\npackages.\n\n# Replicating the Registry\n\nTo replicate the registry **without attachments**, you can point your\nCouchDB replicator at <https://skimdb.npmjs.com/registry>.  Note that\nattachments for public packages will still be loaded from the public\nlocation, but anything you publish into your private registry will\nstay private.\n\nTo replicate the registry **with attachments**, consider using\n[npm-fullfat-registry](https://npmjs.org/npm-fullfat-registry).\nThe fullfatdb CouchDB instance is\n[deprecated](http://blog.npmjs.org/post/83774616862/deprecating-fullfatdb).\n\n# Using the registry with the npm client\n\nWith the setup so far, you can point the npm client at the registry by\nputting this in your ~/.npmrc file:\n\n    registry = http://localhost:5984/registry/_design/app/_rewrite\n\nYou can also set the npm registry config property like:\n\n    npm config set \\\n      registry=http://localhost:5984/registry/_design/app/_rewrite\n\nOr you can simple override the registry config on each call:\n\n    npm \\\n      --registry=http://localhost:5984/registry/_design/app/_rewrite \\\n      install <package>\n\n# Optional: top-of-host urls\n\nTo be snazzier, add a vhost config:\n\n    [vhosts]\n    registry.mydomain.com:5984 = /registry/_design/app/_rewrite\n\nWhere `registry.mydomain.com` is the hostname where you're running the\nthing, and `5984` is the port that CouchDB is running on. If you're\nrunning on port 80, then omit the port altogether.\n\nThen for example you can reference the repository like so:\n\n    npm config set registry http://registry.mydomain.com:5984\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/npm/npm-registry-couchapp.git"
  },
  "scripts": {
    "copy": "bash ./copy.sh",
    "load": "bash ./load-views.sh",
    "start": "bash ./push.sh",
    "test": "tap --timeout 240 test/*.js"
  },
  "version": "2.6.12"
}
